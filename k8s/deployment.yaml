apiVersion: apps/v1
kind: Deployment
metadata:
  name: goserver
  labels:
    app: goserver
spec:
  selector:
    matchLabels:
      app: goserver
  replicas: 2
  template:
    metadata:
      labels:
        app: "goserver"
    spec:
      containers:
        - name: goservercont
          image: malvfr/hello-go:v5.3
          resources:
            requests:
              cpu: "0.3"
              memory: 20Mi
            limits:
              cpu: "0.3"
              memory: 100Mi
          # livenessProbe:
          #   httpGet:
          #     path: /healthz
          #     port: 8000
          #   periodSeconds: 5
          #   timeoutSeconds: 5
          #   failureThreshold: 3
          #   successThreshold: 1
          # startupProbe:
          #   httpGet:
          #     path: /healthz
          #     port: 8000
          #   periodSeconds: 5
          #   timeoutSeconds: 5
          #   failureThreshold: 3
          #   successThreshold: 1
          #   initialDelaySeconds: 5
          # readinessProbe:
          #   httpGet:
          #     path: /readiness
          #     port: 8000
          #   periodSeconds: 5
          #   timeoutSeconds: 5
          #   failureThreshold: 3
          #   successThreshold: 1
          #   initialDelaySeconds: 5
          envFrom:
            - secretRef:
                name: goserver-secret
            # - configMapRef:
            #     name: goserver-cfg-map
          volumeMounts:
            - mountPath: "/go/cats"
              name: config
      volumes:
        - name: config
          configMap:
            name: configmap-goserver-cats
            items:
              - key: members
                path: "cats.txt"
